[AST] /mnt/c/Users/afariasa/Software/cpp-bonsai/tests/input/class_example.cpp
[7:7] CLASS_DECL: C 'C' (TypeKind.RECORD: C) [USR:c:@S@C] [2 tokens] [('class', 'KEYWORD'), ('C', 'IDENTIFIER')]
[9:7] CLASS_DECL: C 'C' (TypeKind.RECORD: C) [USR:c:@S@C] [22 tokens]
| [10:1] CXX_ACCESS_SPEC_DECL: [no spelling] [USR:c:] [AccessSpecifier.PUBLIC] [2 tokens] [('public', 'KEYWORD'), (':', 'PUNCTUATION')]
| [11:5] CONSTRUCTOR: C 'C()' (TypeKind.FUNCTIONPROTO: void ()) (-> TypeKind.VOID: void) [USR:c:@S@C@F@C#] [AccessSpecifier.PUBLIC] [3 tokens] [('C', 'IDENTIFIER'), ('(', 'PUNCTUATION'), (')', 'PUNCTUATION')]
| [12:10] CXX_METHOD: m 'm(int)' (TypeKind.FUNCTIONPROTO: void (int)) (-> TypeKind.VOID: void) [USR:c:@S@C@F@m#I#] [AccessSpecifier.PUBLIC] [6 tokens]
| | [12:16] PARM_DECL: a 'a' (TypeKind.INT: int) [USR:c:class_example.cpp@164@S@C@F@m#I#@a] [2 tokens] [('int', 'KEYWORD'), ('a', 'IDENTIFIER')]
| [13:1] CXX_ACCESS_SPEC_DECL: [no spelling] [USR:c:] [AccessSpecifier.PRIVATE] [2 tokens] [('private', 'KEYWORD'), (':', 'PUNCTUATION')]
| [14:9] FIELD_DECL: x_ 'x_' (TypeKind.INT: int) [USR:c:@S@C@FI@x_] [AccessSpecifier.PRIVATE] [2 tokens] [('int', 'KEYWORD'), ('x_', 'IDENTIFIER')]
[17:4] CONSTRUCTOR: C 'C()' (TypeKind.FUNCTIONPROTO: void ()) (-> TypeKind.VOID: void) [USR:c:@S@C@F@C#] [AccessSpecifier.PUBLIC] [13 tokens]
| [17:1] TYPE_REF: class C 'class C' (TypeKind.RECORD: C) [1 tokens] [('C', 'IDENTIFIER')]
| [17:14] MEMBER_REF: x_ 'x_' (TypeKind.INT: int) [1 tokens] [('x_', 'IDENTIFIER')]
| [17:17] INTEGER_LITERAL: [no spelling] (TypeKind.INT: int) [37 tokens] [('0', 'LITERAL'), ('class', 'KEYWORD'), ('C', 'IDENTIFIER'), (';', 'PUNCTUATION'), ('class', 'KEYWORD'), ('C', 'IDENTIFIER'), ('{', 'PUNCTUATION'), ('public', 'KEYWORD'), (':', 'PUNCTUATION'), ('C', 'IDENTIFIER'), ('(', 'PUNCTUATION'), (')', 'PUNCTUATION'), (';', 'PUNCTUATION'), ('void', 'KEYWORD'), ('m', 'IDENTIFIER'), ('(', 'PUNCTUATION'), ('int', 'KEYWORD'), ('a', 'IDENTIFIER'), (')', 'PUNCTUATION'), (';', 'PUNCTUATION'), ('private', 'KEYWORD'), (':', 'PUNCTUATION'), ('int', 'KEYWORD'), ('x_', 'IDENTIFIER'), (';', 'PUNCTUATION'), ('}', 'PUNCTUATION'), (';', 'PUNCTUATION'), ('C', 'IDENTIFIER'), ('::', 'PUNCTUATION'), ('C', 'IDENTIFIER'), ('(', 'PUNCTUATION'), ('void', 'KEYWORD'), (')', 'PUNCTUATION'), (':', 'PUNCTUATION'), ('x_', 'IDENTIFIER'), ('(', 'PUNCTUATION'), ('SOME_VALUE', 'IDENTIFIER')]
| [17:29] COMPOUND_STMT: [no spelling] [2 tokens] [('{', 'PUNCTUATION'), ('}', 'PUNCTUATION')]
[19:9] CXX_METHOD: m 'm(int)' (TypeKind.FUNCTIONPROTO: void (int)) (-> TypeKind.VOID: void) [USR:c:@S@C@F@m#I#] [AccessSpecifier.PUBLIC] [24 tokens]
| [19:6] TYPE_REF: class C 'class C' (TypeKind.RECORD: C) [1 tokens] [('C', 'IDENTIFIER')]
| [19:15] PARM_DECL: a 'a' (TypeKind.INT: int) [USR:c:class_example.cpp@246@S@C@F@m#I#@a] [2 tokens] [('int', 'KEYWORD'), ('a', 'IDENTIFIER')]
| [19:18] COMPOUND_STMT: [no spelling] [16 tokens]
| | [20:5] BINARY_OPERATOR: [no spelling] (TypeKind.INT: int) [9 tokens]
| | | [20:5] DECL_REF_EXPR: a 'a' (TypeKind.INT: int) [1 tokens] [('a', 'IDENTIFIER')]
| | | [20:9] BINARY_OPERATOR: [no spelling] (TypeKind.INT: int) [7 tokens]
| | | | [20:9] PAREN_EXPR: [no spelling] (TypeKind.INT: int) [5 tokens]
| | | | | [20:10] BINARY_OPERATOR: [no spelling] (TypeKind.INT: int) [3 tokens] [('a', 'IDENTIFIER'), ('+', 'PUNCTUATION'), ('2', 'LITERAL')]
| | | | | | [20:10] UNEXPOSED_EXPR: a 'a' (TypeKind.INT: int) [1 tokens] [('a', 'IDENTIFIER')]
| | | | | | | [20:10] DECL_REF_EXPR: a 'a' (TypeKind.INT: int) [1 tokens] [('a', 'IDENTIFIER')]
| | | | | | [20:14] INTEGER_LITERAL: [no spelling] (TypeKind.INT: int) [1 tokens] [('2', 'LITERAL')]
| | | | [20:19] INTEGER_LITERAL: [no spelling] (TypeKind.INT: int) [1 tokens] [('3', 'LITERAL')]
| | [21:5] BINARY_OPERATOR: [no spelling] (TypeKind.INT: int) [3 tokens] [('x_', 'IDENTIFIER'), ('=', 'PUNCTUATION'), ('a', 'IDENTIFIER')]
| | | [21:5] MEMBER_REF_EXPR: x_ 'x_' (TypeKind.INT: int) [1 tokens] [('x_', 'IDENTIFIER')]
| | | [21:10] UNEXPOSED_EXPR: a 'a' (TypeKind.INT: int) [1 tokens] [('a', 'IDENTIFIER')]
| | | | [21:10] DECL_REF_EXPR: a 'a' (TypeKind.INT: int) [1 tokens] [('a', 'IDENTIFIER')]
[25:11] NAMESPACE: N 'N' [USR:c:@N@N] [24 tokens]
| [26:11] CLASS_DECL: D 'D' (TypeKind.RECORD: N::D) [USR:c:@N@N@S@D] [19 tokens]
| | [26:21] CXX_BASE_SPECIFIER: class C 'class C' (TypeKind.RECORD: C) [AccessSpecifier.PUBLIC] [2 tokens] [('public', 'KEYWORD'), ('C', 'IDENTIFIER')]
| | | [26:21] TYPE_REF: class C 'class C' (TypeKind.RECORD: C) [1 tokens] [('C', 'IDENTIFIER')]
| | [27:27] CXX_METHOD: f 'f(int)' (TypeKind.FUNCTIONPROTO: void (int)) (-> TypeKind.VOID: void) [USR:c:@N@N@S@D@F@f#I#] [AccessSpecifier.PRIVATE] [6 tokens]
| | | [27:11] UNEXPOSED_ATTR: [no spelling] [1 tokens] [('noreturn', 'IDENTIFIER')]
| | | [27:33] PARM_DECL: a 'a' (TypeKind.INT: int) [USR:c:class_example.cpp@366@N@N@S@D@F@f#I#@a] [2 tokens] [('int', 'KEYWORD'), ('a', 'IDENTIFIER')]
[31:12] CXX_METHOD: f 'f(int)' (TypeKind.FUNCTIONPROTO: void (int)) (-> TypeKind.VOID: void) [USR:c:@N@N@S@D@F@f#I#] [AccessSpecifier.PRIVATE] [17 tokens]
| [27:11] UNEXPOSED_ATTR: [no spelling] [1 tokens] [('noreturn', 'IDENTIFIER')]
| [31:6] NAMESPACE_REF: N 'N' [1 tokens] [('N', 'IDENTIFIER')]
| [31:9] TYPE_REF: class N::D 'class N::D' (TypeKind.RECORD: N::D) [1 tokens] [('D', 'IDENTIFIER')]
| [31:18] PARM_DECL: a 'a' (TypeKind.INT: int) [USR:c:class_example.cpp@401@N@N@S@D@F@f#I#@a] [2 tokens] [('int', 'KEYWORD'), ('a', 'IDENTIFIER')]
| [31:21] COMPOUND_STMT: [no spelling] [7 tokens]
| | [32:5] WHILE_STMT: [no spelling] [5 tokens]
| | | [32:12] CXX_BOOL_LITERAL_EXPR: [no spelling] (TypeKind.BOOL: bool) [1 tokens] [('true', 'KEYWORD')]
| | | [32:18] NULL_STMT: [no spelling] [1 tokens] [(';', 'PUNCTUATION')]
[36:5] FUNCTION_DECL: main 'main(int, char **)' (TypeKind.FUNCTIONPROTO: int (int, char **)) (-> TypeKind.INT: int) [USR:c:@F@main#I#**C#] [57 tokens]
| [36:14] PARM_DECL: argc 'argc' (TypeKind.INT: int) [USR:c:class_example.cpp@447@F@main#I#**C#@argc] [2 tokens] [('int', 'KEYWORD'), ('argc', 'IDENTIFIER')]
| [36:28] PARM_DECL: argv 'argv' (TypeKind.POINTER: char **) [USR:c:class_example.cpp@457@F@main#I#**C#@argv] [4 tokens] [('char', 'KEYWORD'), ('*', 'PUNCTUATION'), ('*', 'PUNCTUATION'), ('argv', 'IDENTIFIER')]
| [36:34] COMPOUND_STMT: [no spelling] [46 tokens]
| | [37:5] DECL_STMT: [no spelling] [3 tokens] [('C', 'IDENTIFIER'), ('c', 'IDENTIFIER'), (';', 'PUNCTUATION')]
| | | [37:7] VAR_DECL: c 'c' (TypeKind.RECORD: C) [USR:c:class_example.cpp@478@F@main#I#**C#@c] [2 tokens] [('C', 'IDENTIFIER'), ('c', 'IDENTIFIER')]
| | | | [37:5] TYPE_REF: class C 'class C' (TypeKind.RECORD: C) [1 tokens] [('C', 'IDENTIFIER')]
| | | | [37:7] CALL_EXPR: C 'C' (TypeKind.RECORD: C) [1 tokens] [('c', 'IDENTIFIER')]
| | [38:5] CALL_EXPR: m 'm' (TypeKind.VOID: void) [6 tokens]
| | | [38:7] MEMBER_REF_EXPR: m 'm' (TypeKind.UNEXPOSED: <bound member function type>) [3 tokens] [('c', 'IDENTIFIER'), ('.', 'PUNCTUATION'), ('m', 'IDENTIFIER')]
| | | | [38:5] DECL_REF_EXPR: c 'c' (TypeKind.RECORD: C) [1 tokens] [('c', 'IDENTIFIER')]
| | | [38:9] INTEGER_LITERAL: [no spelling] (TypeKind.INT: int) [1 tokens] [('42', 'LITERAL')]
| | [40:5] DECL_STMT: [no spelling] [7 tokens]
| | | [40:9] VAR_DECL: c1 'c1' (TypeKind.POINTER: C *) [USR:c:class_example.cpp@504@F@main#I#**C#@c1] [6 tokens]
| | | | [40:5] TYPE_REF: class C 'class C' (TypeKind.RECORD: C) [1 tokens] [('C', 'IDENTIFIER')]
| | | | [40:14] CXX_NEW_EXPR: [no spelling] (TypeKind.POINTER: C *) [2 tokens] [('new', 'KEYWORD'), ('C', 'IDENTIFIER')]
| | | | | [40:18] TYPE_REF: class C 'class C' (TypeKind.RECORD: C) [1 tokens] [('C', 'IDENTIFIER')]
| | | | | [40:18] CALL_EXPR: C 'C' (TypeKind.RECORD: C) [1 tokens] [('C', 'IDENTIFIER')]
| | [41:5] DECL_STMT: [no spelling] [12 tokens]
| | | [41:9] VAR_DECL: c2 'c2' (TypeKind.POINTER: C *) [USR:c:class_example.cpp@525@F@main#I#**C#@c2] [11 tokens]
| | | | [41:5] TYPE_REF: class C 'class C' (TypeKind.RECORD: C) [1 tokens] [('C', 'IDENTIFIER')]
| | | | [41:14] CXX_NEW_EXPR: [no spelling] (TypeKind.POINTER: C *) [7 tokens]
| | | | | [41:24] DECL_REF_EXPR: nothrow 'nothrow' (TypeKind.RECORD: const std::nothrow_t) [3 tokens] [('std', 'IDENTIFIER'), ('::', 'PUNCTUATION'), ('nothrow', 'IDENTIFIER')]
| | | | | | [41:19] NAMESPACE_REF: std 'std' [1 tokens] [('std', 'IDENTIFIER')]
| | | | | [41:33] TYPE_REF: class C 'class C' (TypeKind.RECORD: C) [1 tokens] [('C', 'IDENTIFIER')]
| | | | | [41:33] CALL_EXPR: C 'C' (TypeKind.RECORD: C) [1 tokens] [('C', 'IDENTIFIER')]
| | [42:5] CXX_NEW_EXPR: [no spelling] (TypeKind.POINTER: C *) [5 tokens]
| | | [42:10] UNEXPOSED_EXPR: c2 'c2' (TypeKind.POINTER: void *) [1 tokens] [('c2', 'IDENTIFIER')]
| | | | [42:10] UNEXPOSED_EXPR: c2 'c2' (TypeKind.POINTER: C *) [1 tokens] [('c2', 'IDENTIFIER')]
| | | | | [42:10] DECL_REF_EXPR: c2 'c2' (TypeKind.POINTER: C *) [1 tokens] [('c2', 'IDENTIFIER')]
| | | [42:14] TYPE_REF: class C 'class C' (TypeKind.RECORD: C) [1 tokens] [('C', 'IDENTIFIER')]
| | | [42:14] CALL_EXPR: C 'C' (TypeKind.RECORD: C) [1 tokens] [('C', 'IDENTIFIER')]
| | [44:5] CXX_DELETE_EXPR: [no spelling] (TypeKind.VOID: void) [2 tokens] [('delete', 'KEYWORD'), ('c1', 'IDENTIFIER')]
| | | [44:12] UNEXPOSED_EXPR: c1 'c1' (TypeKind.POINTER: C *) [1 tokens] [('c1', 'IDENTIFIER')]
| | | | [44:12] DECL_REF_EXPR: c1 'c1' (TypeKind.POINTER: C *) [1 tokens] [('c1', 'IDENTIFIER')]
| | [45:5] CXX_DELETE_EXPR: [no spelling] (TypeKind.VOID: void) [2 tokens] [('delete', 'KEYWORD'), ('c2', 'IDENTIFIER')]
| | | [45:12] UNEXPOSED_EXPR: c2 'c2' (TypeKind.POINTER: C *) [1 tokens] [('c2', 'IDENTIFIER')]
| | | | [45:12] DECL_REF_EXPR: c2 'c2' (TypeKind.POINTER: C *) [1 tokens] [('c2', 'IDENTIFIER')]
| | [47:5] RETURN_STMT: [no spelling] [2 tokens] [('return', 'KEYWORD'), ('0', 'LITERAL')]
| | | [47:12] INTEGER_LITERAL: [no spelling] (TypeKind.INT: int) [1 tokens] [('0', 'LITERAL')]